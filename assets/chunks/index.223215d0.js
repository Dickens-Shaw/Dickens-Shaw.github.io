var c=Object.defineProperty;var f=(a,e,n)=>e in a?c(a,e,{enumerable:!0,configurable:!0,writable:!0,value:n}):a[e]=n;var s=(a,e,n)=>(f(a,typeof e!="symbol"?e+"":e,n),n);class p{constructor(e,n="*"){s(this,"channel",new MessageChannel);s(this,"channelSetupPromise");s(this,"eventIndex",0);s(this,"handlers",{});const t=e.getIframe();if(t.hasAttribute("data-event-channel-setup"))throw new Error("An embed viewer instance already initialized on the iframe!");t.setAttribute("data-event-channel-setup","true"),this.channelSetupPromise=(async()=>{await new Promise(r=>{t.addEventListener("load",()=>{var o;this.channel.port1.start();const i=l=>{const[h]=l.data;h==="channel-ready"&&(l.preventDefault(),this.channel.port1.removeEventListener("message",i),this.channel.port1.addEventListener("message",this.eventDispatcher.bind(this)),r(void 0))};this.channel.port1.addEventListener("message",i),(o=t.contentWindow)==null||o.postMessage(["setup-channel",{port:this.channel.port2}],n||"*",[this.channel.port2])})})})()}eventDispatcher(e){const[n,t,r]=e.data||[];n==="event"&&t&&this.handlers[t]&&this.handlers[t].forEach(i=>i(r))}addEventListener(e,n){this.handlers[e]=this.handlers[e]||[],!this.handlers[e].includes(n)&&this.handlers[e].push(n)}removeEventListener(e,n){if(!this.handlers[e])return;const t=this.handlers[e].findIndex(r=>r===n);this.handlers[e].splice(t,1)}async emit(e,n){await this.channelSetupPromise;const t=`xmind-embed-viewer#${this.eventIndex++}`;await new Promise(r=>{const i=o=>{const[l,h]=o.data;l===t&&(this.channel.port1.removeEventListener("message",i),r(h))};this.channel.port1.addEventListener("message",i),this.channel.port1.postMessage([e,n,t])})}}class u{constructor(e,n){s(this,"iframe");let t;const r=typeof e=="string"?document.querySelector(e):e;if(r===null)throw new Error("IFrame or mount element not found by selector "+e);r instanceof HTMLIFrameElement?t=r:(t=document.createElement("iframe"),r.appendChild(t)),t.setAttribute("frameborder","0"),t.setAttribute("scrolling","no"),t.setAttribute("allowfullscreen","true"),t.setAttribute("allow","allowfullscreen"),t.setAttribute("crossorigin","anonymous"),t.setAttribute("src",n),this.iframe=t}getIframe(){return this.iframe}setStyles(e){const n=this.getIframe();for(const[t,r]of Object.entries(e))n.style[t]=r}}class E{constructor(e){s(this,"iframeController");s(this,"iframeEventChannelController");s(this,"internalState",{sheets:[],zoomScale:100,currentSheetId:""});s(this,"region");const{file:n,el:t,region:r="global",styles:i={height:"350px",width:"750px"},isPitchModeDisabled:o}=e,l=r==="cn"?"www.xmind.cn":"www.xmind.app",h=new u(t,`https://${l}/embed-viewer${o?"?pitch-mode=disabled":""}`),m=new p(h,`https://${l}`);this.iframeController=h,this.iframeEventChannelController=m,this.region=r,m.addEventListener("sheet-switch",d=>this.internalState.currentSheetId=d),m.addEventListener("zoom-change",d=>this.internalState.zoomScale=d),m.addEventListener("sheets-load",d=>this.internalState.sheets=d),this.iframeController.setStyles(i),n&&this.load(n)}addEventListener(e,n){this.iframeEventChannelController.addEventListener(e,n)}removeEventListener(e,n){this.iframeEventChannelController.removeEventListener(e,n)}setStyles(e){this.iframeController.setStyles(e)}load(e){this.iframeEventChannelController.emit("open-file",e)}setZoomScale(e){this.iframeEventChannelController.emit("zoom",e)}setFitMap(){this.iframeEventChannelController.emit("fit-map")}switchSheet(e){this.iframeEventChannelController.emit("switch-sheet",e)}get zoom(){return this.internalState.zoomScale}get sheets(){return JSON.parse(JSON.stringify(this.internalState.sheets))}get currentSheetId(){return this.internalState.currentSheetId}}export{E as XMindEmbedViewer};
