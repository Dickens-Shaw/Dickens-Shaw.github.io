import{_ as o,o as e,c as t,x as s,a as n,t as l,Q as a}from"./chunks/framework.058c99df.js";const c="/images/vue1.jpg",r="/images/vue3.jpg",y="/images/vuex.png",F="/images/updateChildren.webp",q=JSON.parse('{"title":"Vue","description":"","frontmatter":{},"headers":[],"relativePath":"frame/vue.md"}'),D={name:"frame/vue.md"},i=a("",22),B=s("strong",null,"Watcher 是发布订阅者模型中的订阅者：",-1),A=s("code",null,"$watch",-1),E=s("code",null,"$watch",-1),d=s("code",null,"computed",-1),u=a("",40),h=a("",119),f=s("ul",null,[s("li",null,[s("code",null,"el"),n("：指令所绑定的元素，可以用来直接操作 DOM")]),s("li",null,[s("code",null,"binding"),n("：一个对象，包含以下 property： "),s("ul",null,[s("li",null,[s("code",null,"name"),n("：指令名，不包括 v- 前缀。")]),s("li",null,[s("code",null,"value"),n('：指令的绑定值，例如：v-my-directive="1 + 1" 中，绑定值为 2。')]),s("li",null,[s("code",null,"oldValue"),n("：指令绑定的前一个值，仅在 update 和 componentUpdated 钩子中可用。无论值是否改变都可用。")]),s("li",null,[s("code",null,"expression"),n('：字符串形式的指令表达式。例如 v-my-directive="1 + 1" 中，表达式为 "1 + 1"。')]),s("li",null,[s("code",null,"arg"),n('：传给指令的参数，可选。例如 v-my-directive:foo 中，参数为 "foo"。')]),s("li",{"foo:":"","true,":"","bar:":"",true:""},[s("code",null,"modifiers"),n("：一个包含修饰符的对象。例如：v-my-directive.foo.bar 中，修饰符对象为")])])]),s("li",null,[s("code",null,"vnode"),n("：Vue 编译生成的虚拟节点")]),s("li",null,[s("code",null,"oldVnode"),n("：上一个虚拟节点，仅在 update 和 componentUpdated 钩子中可用")])],-1),m=a("",227);function C(p,g,v,b,x,k){return e(),t("div",null,[i,s("p",null,[B,n(" 订阅的数据改变时执行相应的回调函数（更新视图或表达式的值）。一个 Watcher 可以更新视图，如 HTML 模板中用到的 "),s("code",null,l(p.test),1),n("，也可以执行一个 "),A,n(" 监督的表达式的回调函数（Vue 实例中的 watch 项底层是调用的 "),E,n(" 实现的），还可以更新一个计算属性（即 Vue 实例中的 "),d,n(" 项）。")]),u,s("p",null,"过滤器是一个函数，它会把表达式中的值始终当作函数的第一个参数。过滤器用在插值表达式 "+l()+" 和 v-bind 表达式 中，然后放在操作符“ | ”后面进行指示。",1),h,f,m])}const _=o(D,[["render",C]]);export{q as __pageData,_ as default};
